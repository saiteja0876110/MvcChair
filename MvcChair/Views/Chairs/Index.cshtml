@model MVCChair.Models.ChairTypeViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Chairs</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Chairs" asp-action="Index" method="get">
    <p>
        <select asp-for="ChairType" asp-items="Model.Types">
            <option value="">All Types</option>
        </select>

        <label>
            Brand:
            <input type="text" asp-for="SearchString" />
        </label>
        <input type="submit" value="Filter" class="btn btn-primary" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Brand)</th>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Type)</th>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Color)</th>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Material)</th>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Capacity)</th>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Price)</th>
            <th>@Html.DisplayNameFor(model => model.Chairs![0].Rating)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Chairs!)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Color)</td>
                <td>@Html.DisplayFor(modelItem => item.Material)</td>
                <td>@Html.DisplayFor(modelItem => item.Capacity)</td>
                <td>@item.Price.ToString("C")</td>
                <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
